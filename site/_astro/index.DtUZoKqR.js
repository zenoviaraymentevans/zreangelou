import{r as n}from"./index.DddtCxX5.js";var b=globalThis?.document?n.useLayoutEffect:()=>{};function d(e){const c=n.useRef(e);return n.useEffect(()=>{c.current=e}),n.useMemo(()=>(...t)=>c.current?.(...t),[])}function z({prop:e,defaultProp:c,onChange:t=()=>{}}){const[o,r]=h({defaultProp:c,onChange:t}),s=e!==void 0,f=s?e:o,u=d(t),a=n.useCallback(i=>{if(s){const l=typeof i=="function"?i(e):i;l!==e&&u(l)}else r(i)},[s,e,r,u]);return[f,a]}function h({defaultProp:e,onChange:c}){const t=n.useState(e),[o]=t,r=n.useRef(o),s=d(c);return n.useEffect(()=>{r.current!==o&&(s(o),r.current=o)},[o,r,s]),t}function y(e){const[c,t]=n.useState(void 0);return b(()=>{if(e){t({width:e.offsetWidth,height:e.offsetHeight});const o=new ResizeObserver(r=>{if(!Array.isArray(r)||!r.length)return;const s=r[0];let f,u;if("borderBoxSize"in s){const a=s.borderBoxSize,i=Array.isArray(a)?a[0]:a;f=i.inlineSize,u=i.blockSize}else f=e.offsetWidth,u=e.offsetHeight;t({width:f,height:u})});return o.observe(e,{box:"border-box"}),()=>o.unobserve(e)}else t(void 0)},[e]),c}export{d as a,y as b,z as c,b as u};
