import{r as o}from"./index.DddtCxX5.js";function a(r){typeof queueMicrotask=="function"?queueMicrotask(r):Promise.resolve().then(r).catch(n=>setTimeout(()=>{throw n}))}function u(){let r=[],n={addEventListener(e,t,s,i){return e.addEventListener(t,s,i),n.add(()=>e.removeEventListener(t,s,i))},requestAnimationFrame(...e){let t=requestAnimationFrame(...e);return n.add(()=>cancelAnimationFrame(t))},nextFrame(...e){return n.requestAnimationFrame(()=>n.requestAnimationFrame(...e))},setTimeout(...e){let t=setTimeout(...e);return n.add(()=>clearTimeout(t))},microTask(...e){let t={current:!0};return a(()=>{t.current&&e[0]()}),n.add(()=>{t.current=!1})},style(e,t,s){let i=e.style.getPropertyValue(t);return Object.assign(e.style,{[t]:s}),this.add(()=>{Object.assign(e.style,{[t]:i})})},group(e){let t=u();return e(t),this.add(()=>t.dispose())},add(e){return r.includes(e)||r.push(e),()=>{let t=r.indexOf(e);if(t>=0)for(let s of r.splice(t,1))s()}},dispose(){for(let e of r.splice(0))e()}};return n}function c(){let[r]=o.useState(u);return o.useEffect(()=>()=>r.dispose(),[r]),r}export{u as o,c as p,a as t};
